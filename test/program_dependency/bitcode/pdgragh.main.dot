digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";

	Node0x932fce0 [shape=record,label="{\<\<ENTRY\>\> getFlag}"];
	Node0x932fce0 -> Node0x932fd50;
	Node0x932fd50 [shape=record,label="{  ret i32 1}"];
	Node0x932fd50 -> Node0x9335ad0[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9338130 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x9338130 -> Node0x93381d0[style=dotted,label = "{DEF_USE}" ];
	Node0x93381d0 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x93357d0 [shape=record,label="{  %s = alloca %struct.struct_t, align 4}"];
	Node0x93357d0 -> Node0x93381a0[style=dotted,label = "{DEF_USE}" ];
	Node0x93357d0 -> Node0x93358d0[style=dotted,label = "{DEF_USE}" ];
	Node0x93381a0 [shape=record,label="{  %a1 = getelementptr inbounds %struct.struct_t, %struct.struct_t* %s, i32 0, i32 0}"];
	Node0x93381a0 -> Node0x9335d00[style=dotted,label = "{DEF_USE}" ];
	Node0x93358d0 [shape=record,label="{  %b2 = getelementptr inbounds %struct.struct_t, %struct.struct_t* %s, i32 0, i32 1}"];
	Node0x93358d0 -> Node0x9335e40[style=dotted,label = "{DEF_USE}" ];
	Node0x93333f0 [shape=record,label="{struct.struct_t : field - 0}"];
	Node0x93333f0 -> Node0x93357d0[style=dotted, label="{S_FIELD}"];
	Node0x93333f0 -> Node0x93381a0[style=dotted,label = "{DEF_USE}" ];
	Node0x9333490 [shape=record,label="{struct.struct_t : field - 1}"];
	Node0x9333490 -> Node0x93357d0[style=dotted, label="{S_FIELD}"];
	Node0x9333490 -> Node0x93358d0[style=dotted,label = "{DEF_USE}" ];
	Node0x93335c0 [shape=record,label="{  %a = alloca i32, align 4}"];
	Node0x93335c0 -> Node0x9333630[style=dotted,label = "{DEF_USE}" ];
	Node0x93335c0 -> Node0x93336a0[style=dotted,label = "{DEF_USE}" ];
	Node0x9333630 [shape=record,label="{  store i32 5, i32* %a, align 4}"];
	Node0x9333630 -> Node0x93336a0[style=dotted,label = "{RAW} a"];
	Node0x93336a0 [shape=record,label="{  %0 = load i32, i32* %a, align 4}"];
	Node0x93336a0 -> Node0x9333630[style=dotted, label = "{DATA_GENERAL}"];
	Node0x93336a0 -> Node0x9335d00[style=dotted,label = "{DEF_USE}" ];
	Node0x9333740 [shape=record,label="{  %b = alloca float, align 4}"];
	Node0x9333740 -> Node0x9335950[style=dotted,label = "{DEF_USE}" ];
	Node0x9333740 -> Node0x93359c0[style=dotted,label = "{DEF_USE}" ];
	Node0x9335950 [shape=record,label="{  store float 6.000000e+00, float* %b, align 4}"];
	Node0x9335950 -> Node0x93359c0[style=dotted,label = "{RAW} b"];
	Node0x93359c0 [shape=record,label="{  %1 = load float, float* %b, align 4}"];
	Node0x93359c0 -> Node0x9335950[style=dotted, label = "{DATA_GENERAL}"];
	Node0x93359c0 -> Node0x9335e40[style=dotted,label = "{DEF_USE}" ];
	Node0x9335ad0 [shape=record,label="{  %call = call i32 @getFlag()}"];
	Node0x9335ad0 -> Node0x932fce0;
	Node0x9335ad0 -> Node0x9335b40[style=dotted,label = "{DEF_USE}" ];
	Node0x9335b40 [shape=record,label="{  %tobool = icmp ne i32 %call, 0}"];
	Node0x9335b40 -> Node0x9333530[style=dotted,label = "{DEF_USE}" ];
	Node0x9333530 [shape=record,label="{  br i1 %tobool, label %if.then, label %if.else}"];
	Node0x9333530 -> Node0x93336a0;
	Node0x9333530 -> Node0x93381a0;
	Node0x9333530 -> Node0x9335d00;
	Node0x9333530 -> Node0x9333560;
	Node0x9333530 -> Node0x93359c0;
	Node0x9333530 -> Node0x93358d0;
	Node0x9333530 -> Node0x9335e40;
	Node0x9333530 -> Node0x9335eb0;
	Node0x9335d00 [shape=record,label="{  store i32 %0, i32* %a1, align 4}"];
	Node0x9333560 [shape=record,label="{  br label %if.end}"];
	Node0x9335e40 [shape=record,label="{  store float %1, float* %b2, align 4}"];
	Node0x9335eb0 [shape=record,label="{  br label %if.end}"];
	Node0x9335f80 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x9335f80 -> Node0x9338130;
	Node0x9335f80 -> Node0x93357d0;
	Node0x9335f80 -> Node0x93335c0;
	Node0x9335f80 -> Node0x9333740;
	Node0x9335f80 -> Node0x93381d0;
	Node0x9335f80 -> Node0x9333630;
	Node0x9335f80 -> Node0x9335950;
	Node0x9335f80 -> Node0x9335ad0;
	Node0x9335f80 -> Node0x9335b40;
	Node0x9335f80 -> Node0x9333530;
	Node0x9335f80 -> Node0x9336010;
	Node0x9336010 [shape=record,label="{  ret i32 0}"];
}
