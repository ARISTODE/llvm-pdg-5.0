digraph "Program Dependency Graph for 'initkey' function" {
	label="Program Dependency Graph for 'initkey' function";
graph [ splines=true ]
	Node0x8228030 [shape=record,label="{  %str.addr = alloca i8*, align 8}"];
	Node0x8228030 -> Node0x82280a0[style=dotted,label = "{DEF_USE}" ];
	Node0x8228030 -> Node0x8228110[style=dotted,label = "{DEF_USE}" ];
	Node0x82280a0 [shape=record,label="{  store i8* %str, i8** %str.addr, align 8}"];
	Node0x82280a0 -> Node0x8228110[style=dotted,label = "{RAW} str.addr"];
	Node0x8228110 [shape=record,label="{  %0 = load i8*, i8** %str.addr, align 8}"];
	Node0x8228110 -> Node0x822bc10[style=dotted,label = "{DEF_USE}" ];
	Node0x8228000 [shape=record,label="{GLOBAL_VALUE:@key = common global i8* null, align 8}"];
	Node0x8228000 -> Node0x8228220[style=dotted];
	Node0x8228000 -> Node0x8228180[style=dotted];
	Node0x8228000 -> Node0x8228350[style=dotted];
	Node0x8228220 [shape=record,label="{  %6 = load i8*, i8** @key, align 8}"];
	Node0x8228220 -> Node0x822c6f0[style=dotted, label = "{data_g}"];
	Node0x8228220 -> Node0x822c760[style=dotted,label = "{DEF_USE}" ];
	Node0x8228180 [shape=record,label="{  %3 = load i8*, i8** @key, align 8}"];
	Node0x8228180 -> Node0x8228350[style=dotted, label = "{data_g}"];
	Node0x8228180 -> Node0x822f9b0[style=dotted, label = "{data_g}"];
	Node0x8228180 -> Node0x822fa50[style=dotted,label = "{DEF_USE}" ];
	Node0x8228350 [shape=record,label="{  store i8* %call, i8** @key, align 8}"];
	Node0x8228350 -> Node0x8228180[style=dotted,label = "{RAW} key"];
	Node0x8228320 [shape=record,label="{GLOBAL_VALUE:@i = common global i32 0, align 4}"];
	Node0x8228320 -> Node0x822aff0[style=dotted];
	Node0x8228320 -> Node0x822b0f0[style=dotted];
	Node0x8228320 -> Node0x822b190[style=dotted];
	Node0x8228320 -> Node0x822b160[style=dotted];
	Node0x8228320 -> Node0x822b240[style=dotted];
	Node0x8228320 -> Node0x822b340[style=dotted];
	Node0x8228320 -> Node0x822b3b0[style=dotted];
	Node0x8228320 -> Node0x822b420[style=dotted];
	Node0x8228320 -> Node0x822b490[style=dotted];
	Node0x8228320 -> Node0x822b060[style=dotted];
	Node0x8228320 -> Node0x822b2b0[style=dotted];
	Node0x8228320 -> Node0x822b720[style=dotted];
	Node0x8228320 -> Node0x822b790[style=dotted];
	Node0x8228320 -> Node0x822b800[style=dotted];
	Node0x8228320 -> Node0x822b870[style=dotted];
	Node0x8228320 -> Node0x822b8e0[style=dotted];
	Node0x8228320 -> Node0x822b950[style=dotted];
	Node0x822aff0 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x822aff0 -> Node0x822b160[style=dotted,label = "{RAW} i"];
	Node0x822aff0 -> Node0x822b190[style=dotted,label = "{RAW} i"];
	Node0x822aff0 -> Node0x82412b0[style=dotted,label = "{RAW} arrayidx"];
	Node0x822aff0 -> Node0x822b0f0[style=dotted,label = "{RAW} i"];
	Node0x822b0f0 [shape=record,label="{  %4 = load i32, i32* @i, align 4}"];
	Node0x822b0f0 -> Node0x8241960[style=dotted, label = "{data_g}"];
	Node0x822b0f0 -> Node0x8233900[style=dotted,label = "{DEF_USE}" ];
	Node0x822b190 [shape=record,label="{  %2 = load i32, i32* @i, align 4}"];
	Node0x822b190 -> Node0x822b160[style=dotted, label = "{data_g}"];
	Node0x822b190 -> Node0x8241ac0[style=dotted,label = "{DEF_USE}" ];
	Node0x822b160 [shape=record,label="{  %0 = load i32, i32* @i, align 4}"];
	Node0x822b160 -> Node0x822b240[style=dotted, label = "{data_g}"];
	Node0x822b160 -> Node0x822aff0[style=dotted, label = "{data_g}"];
	Node0x822b160 -> Node0x82413b0[style=dotted,label = "{DEF_USE}" ];
	Node0x822b240 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x822b240 -> Node0x822b160[style=dotted,label = "{RAW} i"];
	Node0x822b240 -> Node0x822b190[style=dotted,label = "{RAW} i"];
	Node0x822b240 -> Node0x82412b0[style=dotted,label = "{RAW} arrayidx"];
	Node0x822b240 -> Node0x822b0f0[style=dotted,label = "{RAW} i"];
	Node0x822b340 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x822b340 -> Node0x822b2b0[style=dotted,label = "{RAW} i"];
	Node0x822b340 -> Node0x822b060[style=dotted,label = "{RAW} i"];
	Node0x822b340 -> Node0x8233110[style=dotted,label = "{RAW} arrayidx"];
	Node0x822b340 -> Node0x822b490[style=dotted,label = "{RAW} i"];
	Node0x822b340 -> Node0x8233180[style=dotted,label = "{RAW} arrayidx4"];
	Node0x822b340 -> Node0x822b420[style=dotted,label = "{RAW} i"];
	Node0x822b340 -> Node0x822b3b0[style=dotted,label = "{RAW} i"];
	Node0x822b3b0 [shape=record,label="{  %11 = load i32, i32* @i, align 4}"];
	Node0x822b3b0 -> Node0x822c6f0[style=dotted, label = "{data_g}"];
	Node0x822b3b0 -> Node0x82378e0[style=dotted,label = "{DEF_USE}" ];
	Node0x822b420 [shape=record,label="{  %10 = load i32, i32* @i, align 4}"];
	Node0x822b420 -> Node0x822b2b0[style=dotted, label = "{data_g}"];
	Node0x822b420 -> Node0x8237750[style=dotted,label = "{DEF_USE}" ];
	Node0x822b490 [shape=record,label="{  %7 = load i32, i32* @i, align 4}"];
	Node0x822b490 -> Node0x822b2b0[style=dotted, label = "{data_g}"];
	Node0x822b490 -> Node0x8233a10[style=dotted,label = "{DEF_USE}" ];
	Node0x822b060 [shape=record,label="{  %4 = load i32, i32* @i, align 4}"];
	Node0x822b060 -> Node0x822b2b0[style=dotted, label = "{data_g}"];
	Node0x822b060 -> Node0x8233560[style=dotted,label = "{DEF_USE}" ];
	Node0x822b2b0 [shape=record,label="{  %1 = load i32, i32* @i, align 4}"];
	Node0x822b2b0 -> Node0x822b720[style=dotted, label = "{data_g}"];
	Node0x822b2b0 -> Node0x822b340[style=dotted, label = "{data_g}"];
	Node0x822b2b0 -> Node0x82333d0[style=dotted,label = "{DEF_USE}" ];
	Node0x822b720 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x822b720 -> Node0x822b2b0[style=dotted,label = "{RAW} i"];
	Node0x822b720 -> Node0x822b060[style=dotted,label = "{RAW} i"];
	Node0x822b720 -> Node0x8233110[style=dotted,label = "{RAW} arrayidx"];
	Node0x822b720 -> Node0x822b490[style=dotted,label = "{RAW} i"];
	Node0x822b720 -> Node0x8233180[style=dotted,label = "{RAW} arrayidx4"];
	Node0x822b720 -> Node0x822b420[style=dotted,label = "{RAW} i"];
	Node0x822b720 -> Node0x822b3b0[style=dotted,label = "{RAW} i"];
	Node0x822b790 [shape=record,label="{  store i32 %inc, i32* @i, align 4}"];
	Node0x822b790 -> Node0x822b8e0[style=dotted,label = "{RAW} i"];
	Node0x822b790 -> Node0x822b870[style=dotted,label = "{RAW} i"];
	Node0x822b790 -> Node0x822b800[style=dotted,label = "{RAW} i"];
	Node0x822b800 [shape=record,label="{  %5 = load i32, i32* @i, align 4}"];
	Node0x822b800 -> Node0x822f9b0[style=dotted, label = "{data_g}"];
	Node0x822b800 -> Node0x822d7d0[style=dotted,label = "{DEF_USE}" ];
	Node0x822b870 [shape=record,label="{  %4 = load i32, i32* @i, align 4}"];
	Node0x822b870 -> Node0x822b8e0[style=dotted, label = "{data_g}"];
	Node0x822b870 -> Node0x822d690[style=dotted,label = "{DEF_USE}" ];
	Node0x822b8e0 [shape=record,label="{  %1 = load i32, i32* @i, align 4}"];
	Node0x822b8e0 -> Node0x822b950[style=dotted, label = "{data_g}"];
	Node0x822b8e0 -> Node0x822b790[style=dotted, label = "{data_g}"];
	Node0x822b8e0 -> Node0x822f860[style=dotted,label = "{DEF_USE}" ];
	Node0x822b950 [shape=record,label="{  store i32 0, i32* @i, align 4}"];
	Node0x822b950 -> Node0x822b8e0[style=dotted,label = "{RAW} i"];
	Node0x822b950 -> Node0x822b870[style=dotted,label = "{RAW} i"];
	Node0x822b950 -> Node0x822b800[style=dotted,label = "{RAW} i"];
	Node0x822b610 [shape=record,label="{GLOBAL_VALUE:@ciphertext = common global i8* null, align 8}"];
	Node0x822b610 -> Node0x822b680[style=dotted];
	Node0x822b610 -> Node0x822b6f0[style=dotted];
	Node0x822b610 -> Node0x822bc40[style=dotted];
	Node0x822b680 [shape=record,label="{  %1 = load i8*, i8** @ciphertext, align 8}"];
	Node0x822b680 -> Node0x82418f0[style=dotted, label = "{data_g}"];
	Node0x822b680 -> Node0x8241960[style=dotted, label = "{data_g}"];
	Node0x822b680 -> Node0x8241a00[style=dotted,label = "{DEF_USE}" ];
	Node0x822b6f0 [shape=record,label="{  %9 = load i8*, i8** @ciphertext, align 8}"];
	Node0x822b6f0 -> Node0x822bc40[style=dotted, label = "{data_g}"];
	Node0x822b6f0 -> Node0x822c6f0[style=dotted, label = "{data_g}"];
	Node0x822b6f0 -> Node0x8237690[style=dotted,label = "{DEF_USE}" ];
	Node0x822bc40 [shape=record,label="{  store i8* %call, i8** @ciphertext, align 8}"];
	Node0x822bc40 -> Node0x8233110[style=dotted,label = "{RAW} arrayidx"];
	Node0x822bc40 -> Node0x8233180[style=dotted,label = "{RAW} arrayidx4"];
	Node0x822bc40 -> Node0x822b6f0[style=dotted,label = "{RAW} ciphertext"];
	Node0x822bc10 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* %0)}"];
	Node0x822c380 [shape=record,label="{\<\<ENTRY\>\> greeter}"];
	Node0x822c380 -> Node0x8228030;
	Node0x822c380 -> Node0x82280a0;
	Node0x822c380 -> Node0x8228110;
	Node0x822c380 -> Node0x822bc10;
	Node0x822c380 -> Node0x822c410;
	Node0x822c380 -> Node0x822c560;
	Node0x822c380 -> Node0x823cb70[style=dashed, color="blue"];
	Node0x822c380 -> Node0x823cc50[style=dashed, color="blue"];
	Node0x822c410 [shape=record,label="{  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0))}"];
	Node0x822c560 [shape=record,label="{  ret void}"];
	Node0x822fe30 [shape=record,label="{  %sz.addr = alloca i32, align 4}"];
	Node0x822fe30 -> Node0x82311c0[style=dotted,label = "{DEF_USE}" ];
	Node0x822fe30 -> Node0x8231230[style=dotted,label = "{DEF_USE}" ];
	Node0x822fe30 -> Node0x822f2a0[style=dotted,label = "{DEF_USE}" ];
	Node0x82311c0 [shape=record,label="{  store i32 %sz, i32* %sz.addr, align 4}"];
	Node0x82311c0 -> Node0x8231230[style=dotted,label = "{RAW} sz.addr"];
	Node0x82311c0 -> Node0x822f2a0[style=dotted,label = "{RAW} sz.addr"];
	Node0x8231230 [shape=record,label="{  %0 = load i32, i32* %sz.addr, align 4}"];
	Node0x8231230 -> Node0x822f360[style=dotted,label = "{DEF_USE}" ];
	Node0x822f2a0 [shape=record,label="{  %2 = load i32, i32* %sz.addr, align 4}"];
	Node0x822f2a0 -> Node0x8231230[style=dotted, label = "{data_g}"];
	Node0x822f2a0 -> Node0x822f860[style=dotted,label = "{DEF_USE}" ];
	Node0x822f360 [shape=record,label="{  %conv = sext i32 %0 to i64}"];
	Node0x822f360 -> Node0x822f3e0[style=dotted,label = "{DEF_USE}" ];
	Node0x822f3e0 [shape=record,label="{  %call = call noalias i8* @malloc(i64 %conv) #4}"];
	Node0x822f3e0 -> Node0x8228350[style=dotted,label = "{DEF_USE}" ];
	Node0x822f860 [shape=record,label="{  %cmp = icmp ult i32 %1, %2}"];
	Node0x822f860 -> Node0x822f7e0[style=dotted,label = "{DEF_USE}" ];
	Node0x822f7e0 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x822f9b0 [shape=record,label="{  store i8 1, i8* %arrayidx, align 1}"];
	Node0x822f9b0 -> Node0x822b8e0[style=dotted,label = "{RAW} i"];
	Node0x822f9b0 -> Node0x8228180[style=dotted,label = "{RAW} key"];
	Node0x822f9b0 -> Node0x822b870[style=dotted,label = "{RAW} i"];
	Node0x822f9b0 -> Node0x822b800[style=dotted,label = "{RAW} i"];
	Node0x822fa50 [shape=record,label="{  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom}"];
	Node0x822fa50 -> Node0x822f9b0[style=dotted,label = "{DEF_USE}" ];
	Node0x822d690 [shape=record,label="{  %idxprom = zext i32 %4 to i64}"];
	Node0x822d690 -> Node0x822fa50[style=dotted,label = "{DEF_USE}" ];
	Node0x822d7d0 [shape=record,label="{  %inc = add i32 %5, 1}"];
	Node0x822d7d0 -> Node0x822b790[style=dotted,label = "{DEF_USE}" ];
	Node0x822d8d0 [shape=record,label="{\<\<ENTRY\>\> initkey}"];
	Node0x822d8d0 -> Node0x822fe30;
	Node0x822d8d0 -> Node0x82311c0;
	Node0x822d8d0 -> Node0x8231230;
	Node0x822d8d0 -> Node0x822f360;
	Node0x822d8d0 -> Node0x822f3e0;
	Node0x822d8d0 -> Node0x8228350;
	Node0x822d8d0 -> Node0x822b950;
	Node0x822d8d0 -> Node0x822d940;
	Node0x822d8d0 -> Node0x822b8e0;
	Node0x822d8d0 -> Node0x822f2a0;
	Node0x822d8d0 -> Node0x822f860;
	Node0x822d8d0 -> Node0x822f7e0;
	Node0x822d8d0 -> Node0x8228180;
	Node0x822d8d0 -> Node0x822b870;
	Node0x822d8d0 -> Node0x822d690;
	Node0x822d8d0 -> Node0x822fa50;
	Node0x822d8d0 -> Node0x822f9b0;
	Node0x822d8d0 -> Node0x822d9c0;
	Node0x822d8d0 -> Node0x822b800;
	Node0x822d8d0 -> Node0x822d7d0;
	Node0x822d8d0 -> Node0x822b790;
	Node0x822d8d0 -> Node0x822da90;
	Node0x822d8d0 -> Node0x822db00;
	Node0x822d8d0 -> Node0x823e780[style=dashed, color="blue"];
	Node0x822d8d0 -> Node0x823e7f0[style=dashed, color="blue"];
	Node0x822d940 [shape=record,label="{  br label %for.cond}"];
	Node0x822d9c0 [shape=record,label="{  br label %for.inc}"];
	Node0x822da90 [shape=record,label="{  br label %for.cond}"];
	Node0x822db00 [shape=record,label="{  ret void}"];
	Node0x8235100 [shape=record,label="{  %plaintext.addr = alloca i8*, align 8}"];
	Node0x8235100 -> Node0x8235170[style=dotted,label = "{DEF_USE}" ];
	Node0x8235100 -> Node0x82351e0[style=dotted,label = "{DEF_USE}" ];
	Node0x8235170 [shape=record,label="{  store i8* %plaintext, i8** %plaintext.addr, align 8}"];
	Node0x8235170 -> Node0x82351e0[style=dotted,label = "{RAW} plaintext.addr"];
	Node0x82351e0 [shape=record,label="{  %3 = load i8*, i8** %plaintext.addr, align 8}"];
	Node0x82351e0 -> Node0x8235170[style=dotted, label = "{data_g}"];
	Node0x82351e0 -> Node0x82334c0[style=dotted,label = "{DEF_USE}" ];
	Node0x822d4d0 [shape=record,label="{  %sz.addr = alloca i32, align 4}"];
	Node0x822d4d0 -> Node0x8235300[style=dotted,label = "{DEF_USE}" ];
	Node0x822d4d0 -> Node0x8235370[style=dotted,label = "{DEF_USE}" ];
	Node0x822d4d0 -> Node0x8235410[style=dotted,label = "{DEF_USE}" ];
	Node0x8235300 [shape=record,label="{  store i32 %sz, i32* %sz.addr, align 4}"];
	Node0x8235300 -> Node0x8235370[style=dotted,label = "{RAW} sz.addr"];
	Node0x8235300 -> Node0x8235410[style=dotted,label = "{RAW} sz.addr"];
	Node0x8235370 [shape=record,label="{  %0 = load i32, i32* %sz.addr, align 4}"];
	Node0x8235370 -> Node0x82353e0[style=dotted,label = "{DEF_USE}" ];
	Node0x8235410 [shape=record,label="{  %2 = load i32, i32* %sz.addr, align 4}"];
	Node0x8235410 -> Node0x8235370[style=dotted, label = "{data_g}"];
	Node0x8235410 -> Node0x82333d0[style=dotted,label = "{DEF_USE}" ];
	Node0x82353e0 [shape=record,label="{  %conv = sext i32 %0 to i64}"];
	Node0x82353e0 -> Node0x8230aa0[style=dotted,label = "{DEF_USE}" ];
	Node0x8230aa0 [shape=record,label="{  %call = call noalias i8* @malloc(i64 %conv) #4}"];
	Node0x8230aa0 -> Node0x822bc40[style=dotted,label = "{DEF_USE}" ];
	Node0x8233110 [shape=record,label="{  %5 = load i8, i8* %arrayidx, align 1}"];
	Node0x8233110 -> Node0x8233490[style=dotted,label = "{DEF_USE}" ];
	Node0x8233180 [shape=record,label="{  %8 = load i8, i8* %arrayidx4, align 1}"];
	Node0x8233180 -> Node0x822c6c0[style=dotted,label = "{DEF_USE}" ];
	Node0x82333d0 [shape=record,label="{  %cmp = icmp ult i32 %1, %2}"];
	Node0x82333d0 -> Node0x82331f0[style=dotted,label = "{DEF_USE}" ];
	Node0x82331f0 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x82334c0 [shape=record,label="{  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom}"];
	Node0x82334c0 -> Node0x8233110[style=dotted,label = "{DEF_USE}" ];
	Node0x8233560 [shape=record,label="{  %idxprom = zext i32 %4 to i64}"];
	Node0x8233560 -> Node0x82334c0[style=dotted,label = "{DEF_USE}" ];
	Node0x8233490 [shape=record,label="{  %conv2 = sext i8 %5 to i32}"];
	Node0x8233490 -> Node0x822c630[style=dotted,label = "{DEF_USE}" ];
	Node0x822c630 [shape=record,label="{  %xor = xor i32 %conv2, %conv5}"];
	Node0x822c630 -> Node0x8233b70[style=dotted,label = "{DEF_USE}" ];
	Node0x822c6f0 [shape=record,label="{  store i8 %conv6, i8* %arrayidx8, align 1}"];
	Node0x822c6f0 -> Node0x822b2b0[style=dotted,label = "{RAW} i"];
	Node0x822c6f0 -> Node0x822b060[style=dotted,label = "{RAW} i"];
	Node0x822c6f0 -> Node0x8233110[style=dotted,label = "{RAW} arrayidx"];
	Node0x822c6f0 -> Node0x8228220[style=dotted,label = "{RAW} key"];
	Node0x822c6f0 -> Node0x822b490[style=dotted,label = "{RAW} i"];
	Node0x822c6f0 -> Node0x8233180[style=dotted,label = "{RAW} arrayidx4"];
	Node0x822c6f0 -> Node0x822b6f0[style=dotted,label = "{RAW} ciphertext"];
	Node0x822c6f0 -> Node0x822b420[style=dotted,label = "{RAW} i"];
	Node0x822c6f0 -> Node0x822b3b0[style=dotted,label = "{RAW} i"];
	Node0x822c760 [shape=record,label="{  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 %idxprom3}"];
	Node0x822c760 -> Node0x8233180[style=dotted,label = "{DEF_USE}" ];
	Node0x8233a10 [shape=record,label="{  %idxprom3 = zext i32 %7 to i64}"];
	Node0x8233a10 -> Node0x822c760[style=dotted,label = "{DEF_USE}" ];
	Node0x822c6c0 [shape=record,label="{  %conv5 = sext i8 %8 to i32}"];
	Node0x822c6c0 -> Node0x822c630[style=dotted,label = "{DEF_USE}" ];
	Node0x8233b70 [shape=record,label="{  %conv6 = trunc i32 %xor to i8}"];
	Node0x8233b70 -> Node0x822c6f0[style=dotted,label = "{DEF_USE}" ];
	Node0x8237690 [shape=record,label="{  %arrayidx8 = getelementptr inbounds i8, i8* %9, i64 %idxprom7}"];
	Node0x8237690 -> Node0x822c6f0[style=dotted,label = "{DEF_USE}" ];
	Node0x8237750 [shape=record,label="{  %idxprom7 = zext i32 %10 to i64}"];
	Node0x8237750 -> Node0x8237690[style=dotted,label = "{DEF_USE}" ];
	Node0x82378e0 [shape=record,label="{  %inc = add i32 %11, 1}"];
	Node0x82378e0 -> Node0x822b340[style=dotted,label = "{DEF_USE}" ];
	Node0x8237860 [shape=record,label="{\<\<ENTRY\>\> encrypt}"];
	Node0x8237860 -> Node0x8235100;
	Node0x8237860 -> Node0x822d4d0;
	Node0x8237860 -> Node0x8235170;
	Node0x8237860 -> Node0x8235300;
	Node0x8237860 -> Node0x8235370;
	Node0x8237860 -> Node0x82353e0;
	Node0x8237860 -> Node0x8230aa0;
	Node0x8237860 -> Node0x822bc40;
	Node0x8237860 -> Node0x822b720;
	Node0x8237860 -> Node0x8237bd0;
	Node0x8237860 -> Node0x822b2b0;
	Node0x8237860 -> Node0x8235410;
	Node0x8237860 -> Node0x82333d0;
	Node0x8237860 -> Node0x82331f0;
	Node0x8237860 -> Node0x82351e0;
	Node0x8237860 -> Node0x822b060;
	Node0x8237860 -> Node0x8233560;
	Node0x8237860 -> Node0x82334c0;
	Node0x8237860 -> Node0x8233110;
	Node0x8237860 -> Node0x8233490;
	Node0x8237860 -> Node0x8228220;
	Node0x8237860 -> Node0x822b490;
	Node0x8237860 -> Node0x8233a10;
	Node0x8237860 -> Node0x822c760;
	Node0x8237860 -> Node0x8233180;
	Node0x8237860 -> Node0x822c6c0;
	Node0x8237860 -> Node0x822c630;
	Node0x8237860 -> Node0x8233b70;
	Node0x8237860 -> Node0x822b6f0;
	Node0x8237860 -> Node0x822b420;
	Node0x8237860 -> Node0x8237750;
	Node0x8237860 -> Node0x8237690;
	Node0x8237860 -> Node0x822c6f0;
	Node0x8237860 -> Node0x8237c40;
	Node0x8237860 -> Node0x822b3b0;
	Node0x8237860 -> Node0x82378e0;
	Node0x8237860 -> Node0x822b340;
	Node0x8237860 -> Node0x8237cb0;
	Node0x8237860 -> Node0x8237d20;
	Node0x8237860 -> Node0x823ff50[style=dashed, color="blue"];
	Node0x8237860 -> Node0x8240050[style=dashed, color="blue"];
	Node0x8237860 -> Node0x8240180[style=dashed, color="blue"];
	Node0x8237860 -> Node0x82401f0[style=dashed, color="blue"];
	Node0x8237bd0 [shape=record,label="{  br label %for.cond}"];
	Node0x8237c40 [shape=record,label="{  br label %for.inc}"];
	Node0x8237cb0 [shape=record,label="{  br label %for.cond}"];
	Node0x8237d20 [shape=record,label="{  ret void}"];
	Node0x8239bd0 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x8239bd0 -> Node0x823aef0[style=dotted,label = "{DEF_USE}" ];
	Node0x823aef0 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x823afb0 [shape=record,label="{  %username = alloca [20 x i8], align 16}"];
	Node0x823afb0 -> Node0x823b020[style=dotted,label = "{DEF_USE}" ];
	Node0x823afb0 -> Node0x8239470[style=dotted,label = "{DEF_USE}" ];
	Node0x823b020 [shape=record,label="{  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %username, i32 0, i32 0}"];
	Node0x823b020 -> Node0x8236a60[style=dotted,label = "{DEF_USE}" ];
	Node0x8239470 [shape=record,label="{  %arraydecay2 = getelementptr inbounds [20 x i8], [20 x i8]* %username, i32 0, i32 0}"];
	Node0x8239470 -> Node0x8236e20[style=dotted,label = "{DEF_USE}" ];
	Node0x8239470 -> Node0x823d300[style=dashed, color="blue"];
	Node0x823af80 [shape=record,label="{  %text = alloca [1024 x i8], align 16}"];
	Node0x823af80 -> Node0x82395b0[style=dotted,label = "{DEF_USE}" ];
	Node0x823af80 -> Node0x8239620[style=dotted,label = "{DEF_USE}" ];
	Node0x823af80 -> Node0x82396c0[style=dotted,label = "{DEF_USE}" ];
	Node0x823af80 -> Node0x8239690[style=dotted,label = "{DEF_USE}" ];
	Node0x823af80 -> Node0x82397c0[style=dotted,label = "{DEF_USE}" ];
	Node0x82395b0 [shape=record,label="{  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x82395b0 -> Node0x823d8a0[style=dotted,label = "{DEF_USE}" ];
	Node0x8239620 [shape=record,label="{  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x8239620 -> Node0x823dc60[style=dotted,label = "{DEF_USE}" ];
	Node0x82396c0 [shape=record,label="{  %arraydecay8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x82396c0 -> Node0x823ec50[style=dotted,label = "{DEF_USE}" ];
	Node0x82396c0 -> Node0x8240ad0[style=dashed, color="blue"];
	Node0x8239690 [shape=record,label="{  %arraydecay9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x8239690 -> Node0x823ed70[style=dotted,label = "{DEF_USE}" ];
	Node0x82397c0 [shape=record,label="{  %arraydecay14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %text, i32 0, i32 0}"];
	Node0x82397c0 -> Node0x8241440[style=dotted,label = "{DEF_USE}" ];
	Node0x8236a60 [shape=record,label="{  %call1 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* %arraydecay)}"];
	Node0x8236e20 [shape=record,label="{  call void @greeter(i8* %arraydecay2)}"];
	Node0x8236e20 -> Node0x822c380;
	Node0x8236e20 -> Node0x823d300[style=dashed, color="blue"];
	Node0x8236e20 -> Node0x823d410[style=dashed, color="blue"];
	Node0x823cb70 [shape=record,color="blue",label="{FORMAL_IN: 0 i8*}"];
	Node0x823cb70 -> Node0x823cbe0[style=dashed, color="blue"];
	Node0x823cb70 -> Node0x823cc50[style=dashed, color="blue"];
	Node0x823cb70 -> Node0x82280a0[style=dotted, label = "{data_g}"];
	Node0x823cbe0 [shape=record,color="blue",label="{i8 pos: 0 - 0}"];
	Node0x823cbe0 -> Node0x823ccc0[style=dashed, color="blue"];
	Node0x823cbe0 -> Node0x82280a0[style=dotted, label = "{data_g}"];
	Node0x823cc50 [shape=record,color="blue",label="{FORMAL_OUT: 0 i8*}"];
	Node0x823cc50 -> Node0x823ccc0[style=dashed, color="blue"];
	Node0x823cc50 -> Node0x823d410[style=dashed, color="blue"];
	Node0x823ccc0 [shape=record,color="blue",label="{i8 pos: 0 - 1}"];
	Node0x823ccc0 -> Node0x823d480[style=dashed, color="blue"];
	Node0x823d300 [shape=record,color="blue",label="{ACTUAL_IN: 0 i8*}"];
	Node0x823d300 -> Node0x823d3a0[style=dashed, color="blue"];
	Node0x823d300 -> Node0x823cb70[style=dashed, color="blue"];
	Node0x823d3a0 [shape=record,color="blue",label="{i8 pos: 0 - 3}"];
	Node0x823d3a0 -> Node0x823cbe0[style=dashed, color="blue"];
	Node0x823d410 [shape=record,color="blue",label="{ACTUAL_OUT: 0 i8*}"];
	Node0x823d410 -> Node0x823d480[style=dashed, color="blue"];
	Node0x823d480 [shape=record,color="blue",label="{i8 pos: 0 - 5}"];
	Node0x823d8a0 [shape=record,label="{  %call5 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i8* %arraydecay4)}"];
	Node0x823dc60 [shape=record,label="{  %call7 = call i64 @strlen(i8* %arraydecay6) #4}"];
	Node0x823dc60 -> Node0x823e020[style=dotted,label = "{DEF_USE}" ];
	Node0x823e020 [shape=record,label="{  %conv = trunc i64 %call7 to i32}"];
	Node0x823e020 -> Node0x823e0b0[style=dotted,label = "{DEF_USE}" ];
	Node0x823e020 -> Node0x823ebb0[style=dashed, color="blue"];
	Node0x823e0b0 [shape=record,label="{  call void @initkey(i32 %conv)}"];
	Node0x823e0b0 -> Node0x822d8d0;
	Node0x823e0b0 -> Node0x823ebb0[style=dashed, color="blue"];
	Node0x823e0b0 -> Node0x823ec80[style=dashed, color="blue"];
	Node0x823e780 [shape=record,color="blue",label="{FORMAL_IN: 0 i32}"];
	Node0x823e780 -> Node0x823e7f0[style=dashed, color="blue"];
	Node0x823e780 -> Node0x82311c0[style=dotted, label = "{data_g}"];
	Node0x823e7f0 [shape=record,color="blue",label="{FORMAL_OUT: 0 i32}"];
	Node0x823e7f0 -> Node0x823ec80[style=dashed, color="blue"];
	Node0x823ebb0 [shape=record,color="blue",label="{ACTUAL_IN: 0 i32}"];
	Node0x823ebb0 -> Node0x823e780[style=dashed, color="blue"];
	Node0x823ec80 [shape=record,color="blue",label="{ACTUAL_OUT: 0 i32}"];
	Node0x823ec50 [shape=record,label="{  call void @encrypt(i8* %arraydecay8, i32 %conv11)}"];
	Node0x823ec50 -> Node0x8237860;
	Node0x823ec50 -> Node0x8240ad0[style=dashed, color="blue"];
	Node0x823ec50 -> Node0x8240c80[style=dashed, color="blue"];
	Node0x823ec50 -> Node0x8240be0[style=dashed, color="blue"];
	Node0x823ec50 -> Node0x8240d60[style=dashed, color="blue"];
	Node0x823ed70 [shape=record,label="{  %call10 = call i64 @strlen(i8* %arraydecay9) #4}"];
	Node0x823ed70 -> Node0x823f130[style=dotted,label = "{DEF_USE}" ];
	Node0x823f130 [shape=record,label="{  %conv11 = trunc i64 %call10 to i32}"];
	Node0x823f130 -> Node0x823ec50[style=dotted,label = "{DEF_USE}" ];
	Node0x823f130 -> Node0x8240be0[style=dashed, color="blue"];
	Node0x823ff50 [shape=record,color="blue",label="{FORMAL_IN: 0 i8*}"];
	Node0x823ff50 -> Node0x823ffc0[style=dashed, color="blue"];
	Node0x823ff50 -> Node0x8240050[style=dashed, color="blue"];
	Node0x823ff50 -> Node0x8235170[style=dotted, label = "{data_g}"];
	Node0x823ffc0 [shape=record,color="blue",label="{i8 pos: 0 - 0}"];
	Node0x823ffc0 -> Node0x82400c0[style=dashed, color="blue"];
	Node0x823ffc0 -> Node0x8235170[style=dotted, label = "{data_g}"];
	Node0x8240050 [shape=record,color="blue",label="{FORMAL_OUT: 0 i8*}"];
	Node0x8240050 -> Node0x82400c0[style=dashed, color="blue"];
	Node0x8240050 -> Node0x8240c80[style=dashed, color="blue"];
	Node0x82400c0 [shape=record,color="blue",label="{i8 pos: 0 - 10}"];
	Node0x82400c0 -> Node0x8240cf0[style=dashed, color="blue"];
	Node0x8240180 [shape=record,color="blue",label="{FORMAL_IN: 1 i32}"];
	Node0x8240180 -> Node0x82401f0[style=dashed, color="blue"];
	Node0x8240180 -> Node0x8235300[style=dotted, label = "{data_g}"];
	Node0x82401f0 [shape=record,color="blue",label="{FORMAL_OUT: 1 i32}"];
	Node0x82401f0 -> Node0x8240d60[style=dashed, color="blue"];
	Node0x8240ad0 [shape=record,color="blue",label="{ACTUAL_IN: 0 i8*}"];
	Node0x8240ad0 -> Node0x8240b70[style=dashed, color="blue"];
	Node0x8240ad0 -> Node0x823ff50[style=dashed, color="blue"];
	Node0x8240b70 [shape=record,color="blue",label="{i8 pos: 0 - 13}"];
	Node0x8240b70 -> Node0x823ffc0[style=dashed, color="blue"];
	Node0x8240be0 [shape=record,color="blue",label="{ACTUAL_IN: 1 i32}"];
	Node0x8240be0 -> Node0x8240180[style=dashed, color="blue"];
	Node0x8240c80 [shape=record,color="blue",label="{ACTUAL_OUT: 0 i8*}"];
	Node0x8240c80 -> Node0x8240cf0[style=dashed, color="blue"];
	Node0x8240cf0 [shape=record,color="blue",label="{i8 pos: 0 - 15}"];
	Node0x8240d60 [shape=record,color="blue",label="{ACTUAL_OUT: 1 i32}"];
	Node0x82412b0 [shape=record,label="{  %3 = load i8, i8* %arrayidx, align 1}"];
	Node0x82412b0 -> Node0x82419d0[style=dotted,label = "{DEF_USE}" ];
	Node0x82413b0 [shape=record,label="{  %conv13 = zext i32 %0 to i64}"];
	Node0x82413b0 -> Node0x8241280[style=dotted,label = "{DEF_USE}" ];
	Node0x8241280 [shape=record,label="{  %cmp = icmp ult i64 %conv13, %call15}"];
	Node0x8241280 -> Node0x8241820[style=dotted,label = "{DEF_USE}" ];
	Node0x8241440 [shape=record,label="{  %call15 = call i64 @strlen(i8* %arraydecay14) #4}"];
	Node0x8241440 -> Node0x8241280[style=dotted,label = "{DEF_USE}" ];
	Node0x8241820 [shape=record,label="{  br i1 %cmp, label %for.body, label %for.end}"];
	Node0x82418f0 [shape=record,label="{  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0))}"];
	Node0x8241960 [shape=record,label="{  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 %conv17)}"];
	Node0x8241a00 [shape=record,label="{  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom}"];
	Node0x8241a00 -> Node0x82412b0[style=dotted,label = "{DEF_USE}" ];
	Node0x8241ac0 [shape=record,label="{  %idxprom = zext i32 %2 to i64}"];
	Node0x8241ac0 -> Node0x8241a00[style=dotted,label = "{DEF_USE}" ];
	Node0x82419d0 [shape=record,label="{  %conv17 = sext i8 %3 to i32}"];
	Node0x82419d0 -> Node0x8241960[style=dotted,label = "{DEF_USE}" ];
	Node0x8233900 [shape=record,label="{  %inc = add i32 %4, 1}"];
	Node0x8233900 -> Node0x822aff0[style=dotted,label = "{DEF_USE}" ];
	Node0x8242690 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x8242690 -> Node0x8239bd0;
	Node0x8242690 -> Node0x823afb0;
	Node0x8242690 -> Node0x823af80;
	Node0x8242690 -> Node0x823aef0;
	Node0x8242690 -> Node0x8242700;
	Node0x8242690 -> Node0x823b020;
	Node0x8242690 -> Node0x8236a60;
	Node0x8242690 -> Node0x8239470;
	Node0x8242690 -> Node0x8236e20;
	Node0x8242690 -> Node0x8242770;
	Node0x8242690 -> Node0x82395b0;
	Node0x8242690 -> Node0x823d8a0;
	Node0x8242690 -> Node0x8239620;
	Node0x8242690 -> Node0x823dc60;
	Node0x8242690 -> Node0x823e020;
	Node0x8242690 -> Node0x823e0b0;
	Node0x8242690 -> Node0x82396c0;
	Node0x8242690 -> Node0x8239690;
	Node0x8242690 -> Node0x823ed70;
	Node0x8242690 -> Node0x823f130;
	Node0x8242690 -> Node0x823ec50;
	Node0x8242690 -> Node0x82418f0;
	Node0x8242690 -> Node0x822b240;
	Node0x8242690 -> Node0x82427e0;
	Node0x8242690 -> Node0x822b160;
	Node0x8242690 -> Node0x82413b0;
	Node0x8242690 -> Node0x82397c0;
	Node0x8242690 -> Node0x8241440;
	Node0x8242690 -> Node0x8241280;
	Node0x8242690 -> Node0x8241820;
	Node0x8242690 -> Node0x822b680;
	Node0x8242690 -> Node0x822b190;
	Node0x8242690 -> Node0x8241ac0;
	Node0x8242690 -> Node0x8241a00;
	Node0x8242690 -> Node0x82412b0;
	Node0x8242690 -> Node0x82419d0;
	Node0x8242690 -> Node0x8241960;
	Node0x8242690 -> Node0x8242850;
	Node0x8242690 -> Node0x822b0f0;
	Node0x8242690 -> Node0x8233900;
	Node0x8242690 -> Node0x822aff0;
	Node0x8242690 -> Node0x82428c0;
	Node0x8242690 -> Node0x8242930;
	Node0x8242700 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0))}"];
	Node0x8242770 [shape=record,label="{  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0))}"];
	Node0x82427e0 [shape=record,label="{  br label %for.cond}"];
	Node0x8242850 [shape=record,label="{  br label %for.inc}"];
	Node0x82428c0 [shape=record,label="{  br label %for.cond}"];
	Node0x8242930 [shape=record,label="{  ret i32 0}"];
}
