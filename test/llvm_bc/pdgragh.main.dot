digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";

	Node0x7f65aa0 [shape=record,label="{  %p.addr = alloca %struct.S1*, align 8}"];
	Node0x7f65aa0 -> Node0x7f6a5f0[style=dotted,label = "{DEF_USE}" ];
	Node0x7f65aa0 -> Node0x7f6a660[style=dotted,label = "{DEF_USE}" ];
	Node0x7f6a5f0 [shape=record,label="{  store %struct.S1* %p, %struct.S1** %p.addr, align 8}"];
	Node0x7f6a5f0 -> Node0x7f6a660[style=dotted,label = "{RAW} p.addr"];
	Node0x7f6a660 [shape=record,label="{  %0 = load %struct.S1*, %struct.S1** %p.addr, align 8}"];
	Node0x7f6a660 -> Node0x7f664b0[style=dotted,label = "{DEF_USE}" ];
	Node0x7f664b0 [shape=record,label="{  %sp = getelementptr inbounds %struct.S1, %struct.S1* %0, i32 0, i32 1}"];
	Node0x7f664b0 -> Node0x7f66520[style=dotted,label = "{DEF_USE}" ];
	Node0x7f66520 [shape=record,label="{  %1 = load %struct.S2*, %struct.S2** %sp, align 8}"];
	Node0x7f66520 -> Node0x7f6a6d0[style=dotted,label = "{DEF_USE}" ];
	Node0x7f6a6d0 [shape=record,label="{  %x = getelementptr inbounds %struct.S2, %struct.S2* %1, i32 0, i32 0}"];
	Node0x7f6a6d0 -> Node0x7f66620[style=dotted,label = "{DEF_USE}" ];
	Node0x7f66620 [shape=record,label="{  %2 = load i32, i32* %x, align 4}"];
	Node0x7f66620 -> Node0x7f666b0[style=dotted,label = "{DEF_USE}" ];
	Node0x7f666b0 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %2)}"];
	Node0x7f66740 [shape=record,label="{\<\<ENTRY\>\> func}"];
	Node0x7f66740 -> Node0x7f65aa0;
	Node0x7f66740 -> Node0x7f6a5f0;
	Node0x7f66740 -> Node0x7f6a660;
	Node0x7f66740 -> Node0x7f664b0;
	Node0x7f66740 -> Node0x7f66520;
	Node0x7f66740 -> Node0x7f6a6d0;
	Node0x7f66740 -> Node0x7f66620;
	Node0x7f66740 -> Node0x7f666b0;
	Node0x7f66740 -> Node0x7f66860;
	Node0x7f66740 -> Node0x7f69b00[style=dashed];
	Node0x7f66740 -> Node0x7f69d90[style=dashed];
	Node0x7f66860 [shape=record,label="{  ret void}"];
	Node0x7f67e90 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x7f67e90 -> Node0x7f67ec0;
	Node0x7f67e90 -> Node0x7f67f30;
	Node0x7f67e90 -> Node0x7f67fd0;
	Node0x7f67e90 -> Node0x7f67fa0;
	Node0x7f67e90 -> Node0x7f6ad90;
	Node0x7f67e90 -> Node0x7f6ae90;
	Node0x7f67ec0 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x7f67ec0 -> Node0x7f67fa0[style=dotted,label = "{DEF_USE}" ];
	Node0x7f67f30 [shape=record,label="{  %s1 = alloca %struct.S1, align 8}"];
	Node0x7f67f30 -> Node0x7f6ad90[style=dotted,label = "{DEF_USE}" ];
	Node0x7f67fd0 [shape=record,label="{  %s2 = alloca %struct.S2, align 4}"];
	Node0x7f67fa0 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x7f6ad90 [shape=record,label="{  call void @func(%struct.S1* %s1)}"];
	Node0x7f6ad90 -> Node0x7f66740;
	Node0x7f6ad90 -> Node0x7f6c4a0[style=dashed];
	Node0x7f6ad90 -> Node0x7f6c750[style=dashed];
	Node0x7f6ae90 [shape=record,label="{  ret i32 0}"];
	Node0x7f69b00 [shape=record,label="{FORMAL_IN:%struct.S1*}"];
	Node0x7f69b00 -> Node0x7f69b70[style=dashed];
	Node0x7f69b00 -> Node0x7f69be0[style=dashed];
	Node0x7f69b00 -> Node0x7f69d90[style=dashed];
	Node0x7f69b00 -> Node0x7f6a5f0[style=dotted];
	Node0x7f69b70 [shape=record,label="{1 float}"];
	Node0x7f69b70 -> Node0x7f69e00[style=dashed];
	Node0x7f69be0 [shape=record,label="{2 %struct.S2*}"];
	Node0x7f69be0 -> Node0x7f69c80[style=dashed];
	Node0x7f69be0 -> Node0x7f69cf0[style=dashed];
	Node0x7f69be0 -> Node0x7f69e70[style=dashed];
	Node0x7f69c80 [shape=record,label="{3 i32}"];
	Node0x7f69c80 -> Node0x7f69f10[style=dashed];
	Node0x7f69cf0 [shape=record,label="{4 i32}"];
	Node0x7f69cf0 -> Node0x7f69f80[style=dashed];
	Node0x7f69d90 [shape=record,label="{FORMAL_OUT:%struct.S1*}"];
	Node0x7f69d90 -> Node0x7f69e00[style=dashed];
	Node0x7f69d90 -> Node0x7f69e70[style=dashed];
	Node0x7f69d90 -> Node0x7f6c750[style=dashed];
	Node0x7f69e00 [shape=record,label="{1 float}"];
	Node0x7f69e00 -> Node0x7f6af00[style=dashed];
	Node0x7f69e70 [shape=record,label="{2 %struct.S2*}"];
	Node0x7f69e70 -> Node0x7f69f10[style=dashed];
	Node0x7f69e70 -> Node0x7f69f80[style=dashed];
	Node0x7f69e70 -> Node0x7f6af70[style=dashed];
	Node0x7f69f10 [shape=record,label="{3 i32}"];
	Node0x7f69f10 -> Node0x7f6c9d0[style=dashed];
	Node0x7f69f80 [shape=record,label="{4 i32}"];
	Node0x7f69f80 -> Node0x7f6ca40[style=dashed];
	Node0x7f6c4a0 [shape=record,label="{ACTUAL_IN:%struct.S1*}"];
	Node0x7f6c4a0 -> Node0x7f6c510[style=dashed];
	Node0x7f6c4a0 -> Node0x7f6c5a0[style=dashed];
	Node0x7f6c4a0 -> Node0x7f69b00[style=dashed];
	Node0x7f6c510 [shape=record,label="{6 float}"];
	Node0x7f6c510 -> Node0x7f69b70[style=dashed];
	Node0x7f6c5a0 [shape=record,label="{7 %struct.S2*}"];
	Node0x7f6c5a0 -> Node0x7f6c640[style=dashed];
	Node0x7f6c5a0 -> Node0x7f6c6b0[style=dashed];
	Node0x7f6c5a0 -> Node0x7f69be0[style=dashed];
	Node0x7f6c640 [shape=record,label="{8 i32}"];
	Node0x7f6c640 -> Node0x7f69c80[style=dashed];
	Node0x7f6c6b0 [shape=record,label="{9 i32}"];
	Node0x7f6c6b0 -> Node0x7f69cf0[style=dashed];
	Node0x7f6c750 [shape=record,label="{ACTUAL_OUT:%struct.S1*}"];
	Node0x7f6c750 -> Node0x7f6af00[style=dashed];
	Node0x7f6c750 -> Node0x7f6af70[style=dashed];
	Node0x7f6af00 [shape=record,label="{11 float}"];
	Node0x7f6af70 [shape=record,label="{12 %struct.S2*}"];
	Node0x7f6af70 -> Node0x7f6c9d0[style=dashed];
	Node0x7f6af70 -> Node0x7f6ca40[style=dashed];
	Node0x7f6c9d0 [shape=record,label="{13 i32}"];
	Node0x7f6ca40 [shape=record,label="{14 i32}"];
}
