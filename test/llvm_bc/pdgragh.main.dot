digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";

	Node0x9ba66a0 [shape=record,label="{  %p1.addr = alloca %struct.S1*, align 8}"];
	Node0x9ba66a0 -> Node0x9ba6710[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba66a0 -> Node0x9ba6780[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba6710 [shape=record,label="{  store %struct.S1* %p1, %struct.S1** %p1.addr, align 8}"];
	Node0x9ba6710 -> Node0x9ba6780[style=dotted,label = "{RAW} p1.addr"];
	Node0x9ba6780 [shape=record,label="{  %0 = load %struct.S1*, %struct.S1** %p1.addr, align 8}"];
	Node0x9ba6780 -> Node0x9ba6ac0[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba6920 [shape=record,label="{  %p2.addr = alloca %struct.S2*, align 8}"];
	Node0x9ba6920 -> Node0x9ba6990[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba6920 -> Node0x9ba67f0[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba6990 [shape=record,label="{  store %struct.S2* %p2, %struct.S2** %p2.addr, align 8}"];
	Node0x9ba6990 -> Node0x9ba67f0[style=dotted,label = "{RAW} p2.addr"];
	Node0x9ba67f0 [shape=record,label="{  %3 = load %struct.S2*, %struct.S2** %p2.addr, align 8}"];
	Node0x9ba67f0 -> Node0x9ba4a90[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba6ac0 [shape=record,label="{  %sp = getelementptr inbounds %struct.S1, %struct.S1* %0, i32 0, i32 1}"];
	Node0x9ba6ac0 -> Node0x9ba6b30[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba6b30 [shape=record,label="{  %1 = load %struct.S2*, %struct.S2** %sp, align 8}"];
	Node0x9ba6b30 -> Node0x9ba6ba0[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba6ba0 [shape=record,label="{  %x = getelementptr inbounds %struct.S2, %struct.S2* %1, i32 0, i32 0}"];
	Node0x9ba6ba0 -> Node0x9ba4970[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba4970 [shape=record,label="{  %2 = load i32, i32* %x, align 4}"];
	Node0x9ba4970 -> Node0x9ba4a00[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba4a00 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %2)}"];
	Node0x9ba4a90 [shape=record,label="{  %x1 = getelementptr inbounds %struct.S2, %struct.S2* %3, i32 0, i32 0}"];
	Node0x9ba4a90 -> Node0x9ba4b20[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba4b20 [shape=record,label="{  %4 = load i32, i32* %x1, align 4}"];
	Node0x9ba4b20 -> Node0x9ba4bb0[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba4bb0 [shape=record,label="{  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %4)}"];
	Node0x9ba4c40 [shape=record,label="{\<\<ENTRY\>\> func}"];
	Node0x9ba4c40 -> Node0x9ba66a0;
	Node0x9ba4c40 -> Node0x9ba6920;
	Node0x9ba4c40 -> Node0x9ba6710;
	Node0x9ba4c40 -> Node0x9ba6990;
	Node0x9ba4c40 -> Node0x9ba6780;
	Node0x9ba4c40 -> Node0x9ba6ac0;
	Node0x9ba4c40 -> Node0x9ba6b30;
	Node0x9ba4c40 -> Node0x9ba6ba0;
	Node0x9ba4c40 -> Node0x9ba4970;
	Node0x9ba4c40 -> Node0x9ba4a00;
	Node0x9ba4c40 -> Node0x9ba67f0;
	Node0x9ba4c40 -> Node0x9ba4a90;
	Node0x9ba4c40 -> Node0x9ba4b20;
	Node0x9ba4c40 -> Node0x9ba4bb0;
	Node0x9ba4c40 -> Node0x9ba4cd0;
	Node0x9ba4c40 -> Node0x9ba9160[style=dashed];
	Node0x9ba4c40 -> Node0x9ba9690[style=dashed];
	Node0x9ba4c40 -> Node0x9ba9410[style=dashed];
	Node0x9ba4c40 -> Node0x9ba9920[style=dashed];
	Node0x9ba4cd0 [shape=record,label="{  ret void}"];
	Node0x9ba80c0 [shape=record,label="{struct.S1 : field - 0}"];
	Node0x9ba80c0 -> Node0x9ba8130[style=dotted, label="{S_FIELD}"];
	Node0x9ba8130 [shape=record,label="{  %s1 = alloca %struct.S1, align 8}"];
	Node0x9ba8130 -> Node0x9ba5490[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba7310 [shape=record,label="{struct.S1 : field - 1}"];
	Node0x9ba7310 -> Node0x9ba8130[style=dotted, label="{S_FIELD}"];
	Node0x9ba7380 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x9ba7380 -> Node0x9ba73f0;
	Node0x9ba7380 -> Node0x9ba8130;
	Node0x9ba7380 -> Node0x9ba7490;
	Node0x9ba7380 -> Node0x9ba7460;
	Node0x9ba7380 -> Node0x9ba5490;
	Node0x9ba7380 -> Node0x9ba5590;
	Node0x9ba73f0 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x9ba73f0 -> Node0x9ba7460[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba7490 [shape=record,label="{  %s2 = alloca %struct.S2, align 4}"];
	Node0x9ba7490 -> Node0x9ba5490[style=dotted,label = "{DEF_USE}" ];
	Node0x9ba7460 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x9ba5490 [shape=record,label="{  call void @func(%struct.S1* %s1, %struct.S2* %s2)}"];
	Node0x9ba5490 -> Node0x9ba4c40;
	Node0x9ba5490 -> Node0x9bab590[style=dashed];
	Node0x9ba5490 -> Node0x9bab9c0[style=dashed];
	Node0x9ba5490 -> Node0x9bab840[style=dashed];
	Node0x9ba5490 -> Node0x9babc50[style=dashed];
	Node0x9ba5590 [shape=record,label="{  ret i32 0}"];
	Node0x9ba5620 [shape=record,label="{struct.S2 : field - 0}"];
	Node0x9ba5620 -> Node0x9ba7490[style=dotted, label="{S_FIELD}"];
	Node0x9ba56b0 [shape=record,label="{struct.S2 : field - 1}"];
	Node0x9ba56b0 -> Node0x9ba7490[style=dotted, label="{S_FIELD}"];
	Node0x9ba9160 [shape=record,label="{FORMAL_IN:%struct.S1*}"];
	Node0x9ba9160 -> Node0x9ba91d0[style=dashed];
	Node0x9ba9160 -> Node0x9ba9260[style=dashed];
	Node0x9ba9160 -> Node0x9ba9690[style=dashed];
	Node0x9ba9160 -> Node0x9ba6710[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9ba91d0 [shape=record,label="{1 float}"];
	Node0x9ba91d0 -> Node0x9ba9700[style=dashed];
	Node0x9ba9260 [shape=record,label="{2 %struct.S2*}"];
	Node0x9ba9260 -> Node0x9ba9300[style=dashed];
	Node0x9ba9260 -> Node0x9ba9370[style=dashed];
	Node0x9ba9260 -> Node0x9ba9770[style=dashed];
	Node0x9ba9260 -> Node0x9ba6990[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9ba9300 [shape=record,label="{3 i32}"];
	Node0x9ba9300 -> Node0x9ba9810[style=dashed];
	Node0x9ba9370 [shape=record,label="{4 i32}"];
	Node0x9ba9370 -> Node0x9ba9880[style=dashed];
	Node0x9ba9410 [shape=record,label="{FORMAL_IN:%struct.S2*}"];
	Node0x9ba9410 -> Node0x9ba7190[style=dashed];
	Node0x9ba9410 -> Node0x9ba7200[style=dashed];
	Node0x9ba9410 -> Node0x9ba9920[style=dashed];
	Node0x9ba9410 -> Node0x9ba6990[style=dotted, label = "{DATA_GENERAL}"];
	Node0x9ba7190 [shape=record,label="{6 i32}"];
	Node0x9ba7190 -> Node0x9ba9990[style=dashed];
	Node0x9ba7200 [shape=record,label="{7 i32}"];
	Node0x9ba7200 -> Node0x9ba9a00[style=dashed];
	Node0x9ba9690 [shape=record,label="{FORMAL_OUT:%struct.S1*}"];
	Node0x9ba9690 -> Node0x9ba9700[style=dashed];
	Node0x9ba9690 -> Node0x9ba9770[style=dashed];
	Node0x9ba9690 -> Node0x9bab9c0[style=dashed];
	Node0x9ba9700 [shape=record,label="{1 float}"];
	Node0x9ba9700 -> Node0x9baba30[style=dashed];
	Node0x9ba9770 [shape=record,label="{2 %struct.S2*}"];
	Node0x9ba9770 -> Node0x9ba9810[style=dashed];
	Node0x9ba9770 -> Node0x9ba9880[style=dashed];
	Node0x9ba9770 -> Node0x9babaa0[style=dashed];
	Node0x9ba9810 [shape=record,label="{3 i32}"];
	Node0x9ba9810 -> Node0x9babb40[style=dashed];
	Node0x9ba9880 [shape=record,label="{4 i32}"];
	Node0x9ba9880 -> Node0x9babbb0[style=dashed];
	Node0x9ba9920 [shape=record,label="{FORMAL_OUT:%struct.S2*}"];
	Node0x9ba9920 -> Node0x9ba9990[style=dashed];
	Node0x9ba9920 -> Node0x9ba9a00[style=dashed];
	Node0x9ba9920 -> Node0x9babc50[style=dashed];
	Node0x9ba9990 [shape=record,label="{1 i32}"];
	Node0x9ba9990 -> Node0x9babcc0[style=dashed];
	Node0x9ba9a00 [shape=record,label="{2 i32}"];
	Node0x9ba9a00 -> Node0x9babd30[style=dashed];
	Node0x9bab590 [shape=record,label="{ACTUAL_IN:%struct.S1*}"];
	Node0x9bab590 -> Node0x9bab600[style=dashed];
	Node0x9bab590 -> Node0x9bab690[style=dashed];
	Node0x9bab590 -> Node0x9ba9160[style=dashed];
	Node0x9bab600 [shape=record,label="{4 float}"];
	Node0x9bab600 -> Node0x9ba91d0[style=dashed];
	Node0x9bab690 [shape=record,label="{5 %struct.S2*}"];
	Node0x9bab690 -> Node0x9bab730[style=dashed];
	Node0x9bab690 -> Node0x9bab7a0[style=dashed];
	Node0x9bab690 -> Node0x9ba9260[style=dashed];
	Node0x9bab730 [shape=record,label="{6 i32}"];
	Node0x9bab730 -> Node0x9ba9300[style=dashed];
	Node0x9bab7a0 [shape=record,label="{7 i32}"];
	Node0x9bab7a0 -> Node0x9ba9370[style=dashed];
	Node0x9bab840 [shape=record,label="{ACTUAL_IN:%struct.S2*}"];
	Node0x9bab840 -> Node0x9bab8b0[style=dashed];
	Node0x9bab840 -> Node0x9bab920[style=dashed];
	Node0x9bab840 -> Node0x9ba9410[style=dashed];
	Node0x9bab8b0 [shape=record,label="{14 i32}"];
	Node0x9bab8b0 -> Node0x9ba7190[style=dashed];
	Node0x9bab920 [shape=record,label="{15 i32}"];
	Node0x9bab920 -> Node0x9ba7200[style=dashed];
	Node0x9bab9c0 [shape=record,label="{ACTUAL_OUT:%struct.S1*}"];
	Node0x9bab9c0 -> Node0x9baba30[style=dashed];
	Node0x9bab9c0 -> Node0x9babaa0[style=dashed];
	Node0x9baba30 [shape=record,label="{9 float}"];
	Node0x9babaa0 [shape=record,label="{10 %struct.S2*}"];
	Node0x9babaa0 -> Node0x9babb40[style=dashed];
	Node0x9babaa0 -> Node0x9babbb0[style=dashed];
	Node0x9babb40 [shape=record,label="{11 i32}"];
	Node0x9babbb0 [shape=record,label="{12 i32}"];
	Node0x9babc50 [shape=record,label="{ACTUAL_OUT:%struct.S2*}"];
	Node0x9babc50 -> Node0x9babcc0[style=dashed];
	Node0x9babc50 -> Node0x9babd30[style=dashed];
	Node0x9babcc0 [shape=record,label="{17 i32}"];
	Node0x9babd30 [shape=record,label="{18 i32}"];
}
