digraph "Program Dependency Graph for 'main' function" {
	label="Program Dependency Graph for 'main' function";
graph [ splines=true ]
	Node0x80fb730 [shape=record,label="{  %p1.addr = alloca %struct.person_t*, align 8}"];
	Node0x80fb730 -> Node0x8100b00[style=dotted,label = "{DEF_USE}" ];
	Node0x80fb730 -> Node0x8100b70[style=dotted,label = "{DEF_USE}" ];
	Node0x80fb730 -> Node0x8100c40[style=dotted,label = "{DEF_USE}" ];
	Node0x8100b00 [shape=record,label="{  store %struct.person_t* %p1, %struct.person_t** %p1.addr, align 8}"];
	Node0x8100b00 -> Node0x8100b70[style=dotted,label = "{RAW} p1.addr"];
	Node0x8100b00 -> Node0x8100c40[style=dotted,label = "{RAW} p1.addr"];
	Node0x8100b70 [shape=record,label="{  %0 = load %struct.person_t*, %struct.person_t** %p1.addr, align 8}"];
	Node0x8100b70 -> Node0x8100c10[style=dotted,label = "{DEF_USE}" ];
	Node0x8100c40 [shape=record,label="{  %1 = load %struct.person_t*, %struct.person_t** %p1.addr, align 8}"];
	Node0x8100c40 -> Node0x80fe7c0[style=dotted,label = "{DEF_USE}" ];
	Node0x80fd940 [shape=record,label="{  %name = alloca i8*, align 8}"];
	Node0x80fd940 -> Node0x8100be0[style=dotted,label = "{DEF_USE}" ];
	Node0x80fd940 -> Node0x80fda00[style=dotted,label = "{DEF_USE}" ];
	Node0x8100be0 [shape=record,label="{  store i8* %arraydecay, i8** %name, align 8}"];
	Node0x8100be0 -> Node0x80fda00[style=dotted,label = "{RAW} name"];
	Node0x80fda00 [shape=record,label="{  %3 = load i8*, i8** %name, align 8}"];
	Node0x80fda00 -> Node0x80fea40[style=dotted,label = "{DEF_USE}" ];
	Node0x80fdaa0 [shape=record,label="{  %color = alloca i8*, align 8}"];
	Node0x80fdaa0 -> Node0x80fdb10[style=dotted,label = "{DEF_USE}" ];
	Node0x80fdaa0 -> Node0x80fdc10[style=dotted,label = "{DEF_USE}" ];
	Node0x80fdb10 [shape=record,label="{  store i8* %arraydecay3, i8** %color, align 8}"];
	Node0x80fdb10 -> Node0x80fdc10[style=dotted,label = "{RAW} color"];
	Node0x80fdc10 [shape=record,label="{  %4 = load i8*, i8** %color, align 8}"];
	Node0x80fdc10 -> Node0x80fea40[style=dotted,label = "{DEF_USE}" ];
	Node0x8100c10 [shape=record,label="{  %name1 = getelementptr inbounds %struct.person_t, %struct.person_t* %0, i32 0, i32 1}"];
	Node0x8100c10 -> Node0x80fe730[style=dotted,label = "{DEF_USE}" ];
	Node0x80fe730 [shape=record,label="{  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %name1, i32 0, i32 0}"];
	Node0x80fe730 -> Node0x8100be0[style=dotted,label = "{DEF_USE}" ];
	Node0x80fe7c0 [shape=record,label="{  %s = getelementptr inbounds %struct.person_t, %struct.person_t* %1, i32 0, i32 2}"];
	Node0x80fe7c0 -> Node0x80fe850[style=dotted,label = "{DEF_USE}" ];
	Node0x80fe850 [shape=record,label="{  %2 = load %struct.clothes*, %struct.clothes** %s, align 8}"];
	Node0x80fe850 -> Node0x80fe8e0[style=dotted,label = "{DEF_USE}" ];
	Node0x80fe8e0 [shape=record,label="{  %color2 = getelementptr inbounds %struct.clothes, %struct.clothes* %2, i32 0, i32 0}"];
	Node0x80fe8e0 -> Node0x80fe970[style=dotted,label = "{DEF_USE}" ];
	Node0x80fe970 [shape=record,label="{  %arraydecay3 = getelementptr inbounds [10 x i8], [10 x i8]* %color2, i32 0, i32 0}"];
	Node0x80fe970 -> Node0x80fdb10[style=dotted,label = "{DEF_USE}" ];
	Node0x80fea40 [shape=record,label="{  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i32 0, i32 0), i8* %3, i8* %4)}"];
	Node0x80fef10 [shape=record,label="{\<\<ENTRY\>\> f}"];
	Node0x80fef10 -> Node0x80fb730;
	Node0x80fef10 -> Node0x80fd940;
	Node0x80fef10 -> Node0x80fdaa0;
	Node0x80fef10 -> Node0x8100b00;
	Node0x80fef10 -> Node0x8100b70;
	Node0x80fef10 -> Node0x8100c10;
	Node0x80fef10 -> Node0x80fe730;
	Node0x80fef10 -> Node0x8100be0;
	Node0x80fef10 -> Node0x8100c40;
	Node0x80fef10 -> Node0x80fe7c0;
	Node0x80fef10 -> Node0x80fe850;
	Node0x80fef10 -> Node0x80fe8e0;
	Node0x80fef10 -> Node0x80fe970;
	Node0x80fef10 -> Node0x80fdb10;
	Node0x80fef10 -> Node0x80fda00;
	Node0x80fef10 -> Node0x80fdc10;
	Node0x80fef10 -> Node0x80fea40;
	Node0x80fef10 -> Node0x80fef80;
	Node0x80fef10 -> Node0x8103f00[style=dashed, color="blue"];
	Node0x80fef10 -> Node0x81041f0[style=dashed, color="blue"];
	Node0x80fef80 [shape=record,label="{  ret void}"];
	Node0x81013d0 [shape=record,label="{  %retval = alloca i32, align 4}"];
	Node0x81013d0 -> Node0x8101bc0[style=dotted,label = "{DEF_USE}" ];
	Node0x8101bc0 [shape=record,label="{  store i32 0, i32* %retval, align 4}"];
	Node0x8101c60 [shape=record,label="{  %c = alloca %struct.clothes, align 4}"];
	Node0x8101c60 -> Node0x8101cd0[style=dotted,label = "{DEF_USE}" ];
	Node0x8101c60 -> Node0x8101d40[style=dotted,label = "{DEF_USE}" ];
	Node0x8101cd0 [shape=record,label="{  %0 = bitcast %struct.clothes* %c to i8*}"];
	Node0x8101cd0 -> Node0x80ffca0[style=dotted,label = "{DEF_USE}" ];
	Node0x8101d40 [shape=record,label="{  store %struct.clothes* %c, %struct.clothes** %s, align 8}"];
	Node0x8101c30 [shape=record,label="{  %p = alloca %struct.person_t, align 8}"];
	Node0x8101c30 -> Node0x8101e70[style=dotted,label = "{DEF_USE}" ];
	Node0x8101c30 -> Node0x8101ee0[style=dotted,label = "{DEF_USE}" ];
	Node0x8101c30 -> Node0x80ffba0[style=dotted,label = "{DEF_USE}" ];
	Node0x8101c30 -> Node0x80ffb70[style=dotted,label = "{DEF_USE}" ];
	Node0x8101e70 [shape=record,label="{  %age = getelementptr inbounds %struct.person_t, %struct.person_t* %p, i32 0, i32 0}"];
	Node0x8101e70 -> Node0x80ffe20[style=dotted,label = "{DEF_USE}" ];
	Node0x8101ee0 [shape=record,label="{  %name = getelementptr inbounds %struct.person_t, %struct.person_t* %p, i32 0, i32 1}"];
	Node0x8101ee0 -> Node0x80fead0[style=dotted,label = "{DEF_USE}" ];
	Node0x80ffba0 [shape=record,label="{  %s = getelementptr inbounds %struct.person_t, %struct.person_t* %p, i32 0, i32 2}"];
	Node0x80ffba0 -> Node0x8101d40[style=dotted,label = "{DEF_USE}" ];
	Node0x80ffb70 [shape=record,label="{  store %struct.person_t* %p, %struct.person_t** %pt, align 8}"];
	Node0x80ffb70 -> Node0x80ffd40[style=dotted,label = "{RAW} pt"];
	Node0x80ffcd0 [shape=record,label="{  %pt = alloca %struct.person_t*, align 8}"];
	Node0x80ffcd0 -> Node0x80ffb70[style=dotted,label = "{DEF_USE}" ];
	Node0x80ffcd0 -> Node0x80ffd40[style=dotted,label = "{DEF_USE}" ];
	Node0x80ffd40 [shape=record,label="{  %2 = load %struct.person_t*, %struct.person_t** %pt, align 8}"];
	Node0x80ffd40 -> Node0x80feb90[style=dotted,label = "{DEF_USE}" ];
	Node0x80ffd40 -> Node0x8105670[style=dashed, color="blue"];
	Node0x80ffca0 [shape=record,label="{  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 getelementptr inbounds (%struct.clothes, %struct.clothes* @main.c, i32 0, i32 0, i32 0), i64 16, i1 false)}"];
	Node0x80ffe20 [shape=record,label="{  store i32 10, i32* %age, align 8}"];
	Node0x80fead0 [shape=record,label="{  %1 = bitcast [10 x i8]* %name to i8*}"];
	Node0x80fead0 -> Node0x80feb60[style=dotted,label = "{DEF_USE}" ];
	Node0x80feb60 [shape=record,label="{  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i64 10, i1 false)}"];
	Node0x80feb90 [shape=record,label="{  call void @f(%struct.person_t* %2)}"];
	Node0x80feb90 -> Node0x80fef10;
	Node0x80feb90 -> Node0x8105670[style=dashed, color="blue"];
	Node0x80feb90 -> Node0x8106030[style=dashed, color="blue"];
	Node0x8103f00 [shape=record,color="blue",label="{FORMAL_IN: 0 %struct.person_t*}"];
	Node0x8103f00 -> Node0x8103f70[style=dashed, color="blue"];
	Node0x8103f00 -> Node0x8104000[style=dashed, color="blue"];
	Node0x8103f00 -> Node0x81040a0[style=dashed, color="blue"];
	Node0x8103f00 -> Node0x81041f0[style=dashed, color="blue"];
	Node0x8103f00 -> Node0x8100b00[style=dotted, label = "{data_g}"];
	Node0x8103f70 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x8103f70 -> Node0x8104260[style=dashed, color="blue"];
	Node0x8104000 [shape=record,color="blue",label="{[10 x i8] arg_pos: 0 - f_id: 1}"];
	Node0x8104000 -> Node0x81042d0[style=dashed, color="blue"];
	Node0x8104000 -> Node0x8100c10[style=dotted, label="{S_FIELD}", color="red", penwidth="2.0"];
	Node0x81040a0 [shape=record,color="blue",label="{%struct.clothes* arg_pos: 0 - f_id: 2}"];
	Node0x81040a0 -> Node0x8104070[style=dashed, color="blue"];
	Node0x81040a0 -> Node0x8104150[style=dashed, color="blue"];
	Node0x81040a0 -> Node0x8104370[style=dashed, color="blue"];
	Node0x81040a0 -> Node0x80fe7c0[style=dotted, label="{S_FIELD}", color="red", penwidth="2.0"];
	Node0x8104070 [shape=record,color="blue",label="{[10 x i8] arg_pos: 0 - f_id: 0}"];
	Node0x8104070 -> Node0x8104340[style=dashed, color="blue"];
	Node0x8104070 -> Node0x80fe8e0[style=dotted, label="{S_FIELD}", color="red", penwidth="2.0"];
	Node0x8104150 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 1}"];
	Node0x8104150 -> Node0x8104470[style=dashed, color="blue"];
	Node0x81041f0 [shape=record,color="blue",label="{FORMAL_OUT: 0 %struct.person_t*}"];
	Node0x81041f0 -> Node0x8104260[style=dashed, color="blue"];
	Node0x81041f0 -> Node0x81042d0[style=dashed, color="blue"];
	Node0x81041f0 -> Node0x8104370[style=dashed, color="blue"];
	Node0x81041f0 -> Node0x8106030[style=dashed, color="blue"];
	Node0x8104260 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x8104260 -> Node0x81060a0[style=dashed, color="blue"];
	Node0x81042d0 [shape=record,color="blue",label="{[10 x i8] arg_pos: 0 - f_id: 1}"];
	Node0x81042d0 -> Node0x8106110[style=dashed, color="blue"];
	Node0x8104370 [shape=record,color="blue",label="{%struct.clothes* arg_pos: 0 - f_id: 2}"];
	Node0x8104370 -> Node0x8104340[style=dashed, color="blue"];
	Node0x8104370 -> Node0x8104470[style=dashed, color="blue"];
	Node0x8104370 -> Node0x81061b0[style=dashed, color="blue"];
	Node0x8104340 [shape=record,color="blue",label="{[10 x i8] arg_pos: 0 - f_id: 0}"];
	Node0x8104340 -> Node0x8106180[style=dashed, color="blue"];
	Node0x8104470 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 1}"];
	Node0x8104470 -> Node0x81062b0[style=dashed, color="blue"];
	Node0x8105670 [shape=record,color="blue",label="{ACTUAL_IN: 0 %struct.person_t*}"];
	Node0x8105670 -> Node0x8105710[style=dashed, color="blue"];
	Node0x8105670 -> Node0x8105780[style=dashed, color="blue"];
	Node0x8105670 -> Node0x8105820[style=dashed, color="blue"];
	Node0x8105670 -> Node0x8103f00[style=dashed, color="blue"];
	Node0x8105710 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x8105710 -> Node0x8103f70[style=dashed, color="blue"];
	Node0x8105780 [shape=record,color="blue",label="{[10 x i8] arg_pos: 0 - f_id: 1}"];
	Node0x8105780 -> Node0x8104000[style=dashed, color="blue"];
	Node0x8105820 [shape=record,color="blue",label="{%struct.clothes* arg_pos: 0 - f_id: 2}"];
	Node0x8105820 -> Node0x81057f0[style=dashed, color="blue"];
	Node0x8105820 -> Node0x81058e0[style=dashed, color="blue"];
	Node0x8105820 -> Node0x81040a0[style=dashed, color="blue"];
	Node0x81057f0 [shape=record,color="blue",label="{[10 x i8] arg_pos: 0 - f_id: 0}"];
	Node0x81057f0 -> Node0x8104070[style=dashed, color="blue"];
	Node0x81058e0 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 1}"];
	Node0x81058e0 -> Node0x8104150[style=dashed, color="blue"];
	Node0x8106030 [shape=record,color="blue",label="{ACTUAL_OUT: 0 %struct.person_t*}"];
	Node0x8106030 -> Node0x81060a0[style=dashed, color="blue"];
	Node0x8106030 -> Node0x8106110[style=dashed, color="blue"];
	Node0x8106030 -> Node0x81061b0[style=dashed, color="blue"];
	Node0x81060a0 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 0}"];
	Node0x8106110 [shape=record,color="blue",label="{[10 x i8] arg_pos: 0 - f_id: 1}"];
	Node0x81061b0 [shape=record,color="blue",label="{%struct.clothes* arg_pos: 0 - f_id: 2}"];
	Node0x81061b0 -> Node0x8106180[style=dashed, color="blue"];
	Node0x81061b0 -> Node0x81062b0[style=dashed, color="blue"];
	Node0x8106180 [shape=record,color="blue",label="{[10 x i8] arg_pos: 0 - f_id: 0}"];
	Node0x81062b0 [shape=record,color="blue",label="{i32 arg_pos: 0 - f_id: 1}"];
	Node0x8106000 [shape=record,label="{\<\<ENTRY\>\> main}"];
	Node0x8106000 -> Node0x81013d0;
	Node0x8106000 -> Node0x8101c60;
	Node0x8106000 -> Node0x8101c30;
	Node0x8106000 -> Node0x80ffcd0;
	Node0x8106000 -> Node0x8101bc0;
	Node0x8106000 -> Node0x8101cd0;
	Node0x8106000 -> Node0x80ffca0;
	Node0x8106000 -> Node0x8101e70;
	Node0x8106000 -> Node0x80ffe20;
	Node0x8106000 -> Node0x8101ee0;
	Node0x8106000 -> Node0x80fead0;
	Node0x8106000 -> Node0x80feb60;
	Node0x8106000 -> Node0x80ffba0;
	Node0x8106000 -> Node0x8101d40;
	Node0x8106000 -> Node0x80ffb70;
	Node0x8106000 -> Node0x80ffd40;
	Node0x8106000 -> Node0x80feb90;
	Node0x8106000 -> Node0x8106350;
	Node0x8106350 [shape=record,label="{  ret i32 0}"];
}
